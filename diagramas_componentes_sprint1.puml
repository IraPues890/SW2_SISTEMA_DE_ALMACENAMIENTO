@startuml diagramas_componentes_sprint1

!define COMPONENT component
!define INTERFACE interface
!define DATABASE database

title **üèóÔ∏è DIAGRAMAS DE COMPONENTES POR HISTORIA DE USUARIO**\n//Sprint 1 - Sistema UlStorage//

skinparam componentStyle rectangle
skinparam component {
    BackgroundColor #E8F4FD
    BorderColor #2E86AB
    ArrowColor #A23B72
}

skinparam interface {
    BackgroundColor #FFF3CD
    BorderColor #856404
}

skinparam database {
    BackgroundColor #D1ECF1
    BorderColor #0C5460
}

' ===============================
' SCRUM-5: INICIAR SESI√ìN
' ===============================
!startsub SCRUM5

package "üîê SCRUM-5: Iniciar Sesi√≥n" as scrum5 {
    
    ' Frontend Components
    package "üñ•Ô∏è Frontend" as scrum5_frontend {
        COMPONENT [üì± Componente Login] as login_comp
        COMPONENT [üìù Formulario Login] as login_form
        COMPONENT [‚ö†Ô∏è Manejador Errores] as error_handler
    }
    
    ' Backend Components  
    package "üîß Backend" as scrum5_backend {
        COMPONENT [üîê Controlador Login] as auth_ctrl
        COMPONENT [ÔøΩ Validador Credenciales] as credential_validator
        COMPONENT [üîë Comparador Contrase√±a] as pwd_validator
    }
    
    ' Data Layer
    package "üóÑÔ∏è Data" as scrum5_data {
        COMPONENT [üë§ Repositorio Usuario] as user_repo
        COMPONENT [üë§ Modelo Usuario] as user_model
        DATABASE "üêò PostgreSQL" as db_users
    }
    
    ' Flujo de componentes simplificado
    login_comp --> login_form
    login_form --> auth_ctrl
    auth_ctrl --> credential_validator
    credential_validator --> pwd_validator
    credential_validator --> user_repo
    user_repo --> user_model
    user_model --> db_users
    
    ' Error handling
    auth_ctrl --> error_handler
    credential_validator --> error_handler
}

note right of scrum5 : **Criterio de Aceptaci√≥n:**\nVerificaci√≥n simple de email y contrase√±a\ncontra datos guardados en BD.\nSin tokens ni middleware complejo.

!endsub

' ===============================
' SCRUM-6: CERRAR SESI√ìN
' ===============================
!startsub SCRUM6

package "üö™ SCRUM-6: Cerrar Sesi√≥n" as scrum6 {
    
    ' Frontend Components
    package "üñ•Ô∏è Frontend" as scrum6_frontend {
        COMPONENT [üö™ Bot√≥n Cerrar Sesi√≥n] as logout_btn
        COMPONENT [üîÑ Manejador Redirecci√≥n] as redirect_handler
        COMPONENT [üßπ Limpiador Sesi√≥n] as session_cleaner
    }
    
    ' Backend Components
    package "üîß Backend" as scrum6_backend {
        COMPONENT [ÔøΩ Controlador Logout] as logout_ctrl
        COMPONENT [üìù Logger B√°sico] as logout_log
    }
    
    ' Data Layer
    package "üóÑÔ∏è Data" as scrum6_data {
        DATABASE "üêò PostgreSQL" as db_sessions
    }
    
    ' Flujo de componentes simplificado
    logout_btn --> logout_ctrl
    logout_ctrl --> session_cleaner
    logout_ctrl --> logout_log
    logout_ctrl --> redirect_handler
    logout_log --> db_sessions
    
}

note right of scrum6 : **Criterio de Aceptaci√≥n:**\nCerrar sesi√≥n simple limpiando\nsesi√≥n local sin manejo de tokens

!endsub

' ===============================
' SCRUM-10: PANEL PRINCIPAL
' ===============================
!startsub SCRUM10

package "üìä SCRUM-10: Panel Principal de Navegaci√≥n" as scrum10 {
    
    ' Frontend Components (Arquitectura Real)
    package "üñ•Ô∏è Frontend" as scrum10_frontend {
        COMPONENT [üìä DashUser/DashAdmin] as dashboard
        COMPONENT [üìÅ ActiveFilesTable] as file_list
        COMPONENT [üóÇÔ∏è √Årbol Carpetas] as folder_tree
        COMPONENT [üìà GlobalMetrics] as metrics_panel
        COMPONENT [üë§ UserHeader] as user_header
        COMPONENT [‚ö° QuickActions] as quick_actions
        COMPONENT [ÔøΩÔ∏è ServersStatus] as servers_status
    }
    
    ' Backend Components
    package "üîß Backend" as scrum10_backend {
        COMPONENT [üìÑ Controlador Archivo] as file_ctrl
        COMPONENT [üìÅ Controlador Carpeta] as folder_ctrl
        COMPONENT [üìä Servicio Dashboard] as dash_svc
        COMPONENT [üìà Servicio M√©tricas] as metrics_svc
        COMPONENT [üóÇÔ∏è Servicio Navegaci√≥n] as nav_svc
        COMPONENT [‚òÅÔ∏è Controlador Proveedor] as provider_ctrl
    }
    
    ' Data Layer
    package "üóÑÔ∏è Data" as scrum10_data {
        COMPONENT [üìÑ Repositorio Archivo] as file_repo_dash
        COMPONENT [üìÅ Repositorio Carpeta] as folder_repo_dash
        COMPONENT [üìä Repositorio M√©tricas] as metrics_repo
        DATABASE "üêò PostgreSQL" as db_files
    }
    
    ' Cloud Storage Multi-Proveedor
    package "‚òÅÔ∏è Storage" as scrum10_storage {
        COMPONENT [üè≠ F√°brica Almacenamiento] as storage_factory
        COMPONENT [üÖæÔ∏è Repositorio OCI] as oci_provider
        COMPONENT [üü† Repositorio AWS] as aws_provider
        COMPONENT [üîµ Repositorio Azure] as azure_provider
        COMPONENT [üü¢ Repositorio GCP] as gcp_provider
    }
    
    ' Flujo principal (Componentes Reales)
    dashboard --> user_header
    dashboard --> metrics_panel
    dashboard --> quick_actions
    dashboard --> file_list
    dashboard --> servers_status
    
    file_list --> file_ctrl
    folder_tree --> folder_ctrl
    metrics_panel --> dash_svc
    
    file_ctrl --> dash_svc
    folder_ctrl --> dash_svc
    dash_svc --> metrics_svc
    dash_svc --> nav_svc
    
    dash_svc --> file_repo_dash
    dash_svc --> folder_repo_dash
    metrics_svc --> metrics_repo
    
    file_repo_dash --> db_files
    folder_repo_dash --> db_files
    metrics_repo --> db_files
    
    dash_svc --> provider_ctrl
    provider_ctrl --> storage_factory
    storage_factory --> oci_provider
    storage_factory --> aws_provider
    storage_factory --> azure_provider
    storage_factory --> gcp_provider
}

note right of scrum10 : **Criterio de Aceptaci√≥n:**\nDashboard con vista general,\nlistado de archivos y navegaci√≥n intuitiva\n\n**Arquitectura Multi-Cloud:**\n‚Ä¢ AWS S3 para almacenamiento r√°pido\n‚Ä¢ Azure Blob para integraci√≥n empresarial\n‚Ä¢ GCP Storage para analytics\n‚Ä¢ OCI para costos optimizados\n‚Ä¢ Factory Pattern para abstracci√≥n

!endsub

' ===============================
' SCRUM-11: ACCIONES B√ÅSICAS
' ===============================
!startsub SCRUM11

package "‚ö° SCRUM-11: Acciones B√°sicas del Panel" as scrum11 {
    
    ' Frontend Components
    package "üñ•Ô∏è Frontend" as scrum11_frontend {
        COMPONENT [üîò Botones Acci√≥n] as action_buttons
        COMPONENT [üì§ Bot√≥n Subir] as upload_btn
        COMPONENT [üìÅ Bot√≥n Crear Carpeta] as create_folder_btn
        COMPONENT [üîç Bot√≥n B√∫squeda] as search_btn
        COMPONENT [üí° Proveedor Tooltip] as tooltip_provider
    }
    
    ' Routing Components
    package "üõ£Ô∏è Navigation" as scrum11_nav {
        COMPONENT [üß≠ Enrutador] as router
        COMPONENT [üîó Manejador Rutas] as route_handler
    }
    
    ' Flujo de componentes
    action_buttons --> upload_btn
    action_buttons --> create_folder_btn
    action_buttons --> search_btn
    action_buttons --> tooltip_provider
    
    upload_btn --> router : "/upload"
    create_folder_btn --> router : "/create-folder"
    search_btn --> router : "/search"
    
    router --> route_handler
}

note right of scrum11 : **Criterio de Aceptaci√≥n:**\nBotones de acciones principales visibles,\nnavegaci√≥n responsive y tooltips

!endsub

' ===============================
' SCRUM-12: SUBIR ARCHIVOS
' ===============================
!startsub SCRUM12

package "üì§ SCRUM-12: Subir Archivos" as scrum12 {
    
    ' Frontend Components
    package "üñ•Ô∏è Frontend" as scrum12_frontend {
        COMPONENT [üì§ Componente Subir] as upload_comp
        COMPONENT [üìÅ Selector Archivo] as file_selector
        COMPONENT [üìä Barra Progreso] as progress_bar
        COMPONENT [‚úÖ Validador Archivo] as file_validator_fe
        COMPONENT [üìã Cola Subida] as upload_queue
    }
    
    ' Backend Components
    package "üîß Backend" as scrum12_backend {
        COMPONENT [üì§ Controlador Subida] as upload_ctrl
        COMPONENT [üîç Validador Archivo] as file_validator_be
        COMPONENT [üìÑ Servicio Archivo] as file_svc
        COMPONENT [üè∑Ô∏è Extractor Metadatos] as metadata_extractor
        COMPONENT [üîÑ Procesador Subida] as upload_processor
    }
    
    ' Storage Layer Multi-Cloud
    package "‚òÅÔ∏è Storage" as scrum12_storage {
        COMPONENT [üè≠ F√°brica Almacenamiento] as storage_fact
        COMPONENT [üÖæÔ∏è Repositorio OCI] as oci_repo
        COMPONENT [üü† Repositorio AWS] as aws_repo
        COMPONENT [üîµ Repositorio Azure] as azure_repo
        COMPONENT [üü¢ Repositorio GCP] as gcp_repo
    }
    
    ' Data Layer
    package "üóÑÔ∏è Data" as scrum12_data {
        COMPONENT [üìÑ Repositorio Archivo] as file_repo_up
        COMPONENT [üìù Logger B√°sico] as log_repo
        DATABASE "üêò PostgreSQL" as db_upload
    }
    
    ' Flujo completo de subida
    upload_comp --> file_selector
    file_selector --> file_validator_fe
    file_validator_fe --> upload_queue
    upload_queue --> progress_bar
    
    upload_comp --> upload_ctrl
    upload_ctrl --> file_validator_be
    file_validator_be --> upload_processor
    upload_processor --> file_svc
    upload_processor --> metadata_extractor
    
    file_svc --> storage_fact
    storage_fact --> oci_repo
    storage_fact --> aws_repo
    storage_fact --> azure_repo
    storage_fact --> gcp_repo
    
    file_svc --> file_repo_up
    file_svc --> log_repo
    file_repo_up --> db_upload
    log_repo --> db_upload
    
    ' Feedback al frontend
    upload_processor --> progress_bar
}

note right of scrum12 : **Criterio de Aceptaci√≥n:**\nSubir archivos con barra de progreso,\nvalidaci√≥n de tama√±o y tipo

!endsub

' ===============================
' SCRUM-13: DESCARGAR ARCHIVOS
' ===============================
!startsub SCRUM13

package "üì• SCRUM-13: Descargar Archivos" as scrum13 {
    
    ' Frontend Components
    package "üñ•Ô∏è Frontend" as scrum13_frontend {
        COMPONENT [üì• Bot√≥n Descargar] as download_btn
        COMPONENT [üìä Progreso Descarga] as download_progress
        COMPONENT [üîó Gestor Descarga] as download_mgr
    }
    
    ' Backend Components
    package "üîß Backend" as scrum13_backend {
        COMPONENT [üì• Controlador Descarga] as download_ctrl
        COMPONENT [üë§ Validador Propietario] as perm_validator
        COMPONENT [üìÑ Servicio Archivo] as file_svc_down
        COMPONENT [üîÑ Manejador Stream] as stream_handler
    }
    
    ' Storage Layer Multi-Cloud
    package "‚òÅÔ∏è Storage" as scrum13_storage {
        COMPONENT [üè≠ F√°brica Almacenamiento] as storage_fact_down
        COMPONENT [üÖæÔ∏è Repositorio OCI] as oci_repo_down
        COMPONENT [üü† Repositorio AWS] as aws_repo_down
        COMPONENT [üîµ Repositorio Azure] as azure_repo_down
        COMPONENT [üü¢ Repositorio GCP] as gcp_repo_down
    }
    
    ' Data Layer
    package "üóÑÔ∏è Data" as scrum13_data {
        COMPONENT [üìÑ Repositorio Archivo] as file_repo_down
        COMPONENT [üìù Logger B√°sico] as log_repo_down
        DATABASE "üêò PostgreSQL" as db_download
    }
    
    ' Flujo de descarga
    download_btn --> download_ctrl
    download_ctrl --> perm_validator
    perm_validator --> file_svc_down
    file_svc_down --> storage_fact_down
    storage_fact_down --> oci_repo_down
    storage_fact_down --> aws_repo_down
    storage_fact_down --> azure_repo_down
    storage_fact_down --> gcp_repo_down
    
    file_svc_down --> stream_handler
    stream_handler --> download_mgr
    download_mgr --> download_progress
    
    file_svc_down --> file_repo_down
    file_svc_down --> log_repo_down
    file_repo_down --> db_download
    log_repo_down --> db_download
}

note right of scrum13 : **Criterio de Aceptaci√≥n:**\nDescargar archivos sin p√©rdida de calidad,\nmanejo de archivos grandes

!endsub

' ===============================
' SCRUM-14: PREVISUALIZAR ARCHIVOS
' ===============================
!startsub SCRUM14

package "üëÅÔ∏è SCRUM-14: Previsualizar Archivos" as scrum14 {
    
    ' Frontend Components
    package "üñ•Ô∏è Frontend" as scrum14_frontend {
        COMPONENT [üëÅÔ∏è Componente Vista Previa] as preview_comp
        COMPONENT [üìÑ Visor PDF] as pdf_viewer
        COMPONENT [üñºÔ∏è Visor Imagen] as image_viewer
        COMPONENT [üìù Visor Texto] as text_viewer
        COMPONENT [üîÑ F√°brica Visor] as viewer_factory
        COMPONENT [üéõÔ∏è Controles Vista Previa] as preview_controls
    }
    
    ' Backend Components
    package "üîß Backend" as scrum14_backend {
        COMPONENT [üëÅÔ∏è Controlador Vista Previa] as preview_ctrl
        COMPONENT [üë§ Validador Propietario] as perm_val_prev
        COMPONENT [üìÑ Servicio Vista Previa] as preview_svc
        COMPONENT [üîÑ Generador Miniatura] as thumbnail_gen
        COMPONENT [üìã Detector Tipo MIME] as mime_detector
    }
    
    ' Storage Layer Multi-Cloud
    package "‚òÅÔ∏è Storage" as scrum14_storage {
        COMPONENT [üè≠ F√°brica Almacenamiento] as storage_fact_prev
        COMPONENT [üÖæÔ∏è Repositorio OCI] as oci_repo_prev
        COMPONENT [üü† Repositorio AWS] as aws_repo_prev
        COMPONENT [üîµ Repositorio Azure] as azure_repo_prev
        COMPONENT [üü¢ Repositorio GCP] as gcp_repo_prev
    }
    
    ' Data Layer
    package "üóÑÔ∏è Data" as scrum14_data {
        COMPONENT [üìÑ Repositorio Archivo] as file_repo_prev
        DATABASE "üêò PostgreSQL" as db_preview
    }
    
    ' Flujo de previsualizaci√≥n
    preview_comp --> viewer_factory
    viewer_factory --> pdf_viewer
    viewer_factory --> image_viewer
    viewer_factory --> text_viewer
    preview_comp --> preview_controls
    
    preview_comp --> preview_ctrl
    preview_ctrl --> perm_val_prev
    preview_ctrl --> preview_svc
    preview_svc --> mime_detector
    preview_svc --> thumbnail_gen
    
    preview_svc --> storage_fact_prev
    storage_fact_prev --> oci_repo_prev
    storage_fact_prev --> aws_repo_prev
    storage_fact_prev --> azure_repo_prev
    storage_fact_prev --> gcp_repo_prev
    
    preview_svc --> file_repo_prev
    file_repo_prev --> db_preview
}

note right of scrum14 : **Criterio de Aceptaci√≥n:**\nVisor integrado para PDF, im√°genes y texto,\nnavegaci√≥n entre p√°ginas

!endsub

' ===============================
' SCRUM-15: ELIMINAR ARCHIVOS
' ===============================
!startsub SCRUM15

package "üóëÔ∏è SCRUM-15: Eliminar Archivos" as scrum15 {
    
    ' Frontend Components
    package "üñ•Ô∏è Frontend" as scrum15_frontend {
        COMPONENT [üóëÔ∏è Bot√≥n Eliminar] as delete_btn
        COMPONENT [‚ö†Ô∏è Modal Confirmaci√≥n] as confirm_modal
        COMPONENT [üîÑ Manejador Actualizaci√≥n] as refresh_handler
    }
    
    ' Backend Components
    package "üîß Backend" as scrum15_backend {
        COMPONENT [üóëÔ∏è Controlador Eliminar] as delete_ctrl
        COMPONENT [üë§ Validador Propietario] as perm_val_del
        COMPONENT [üìÑ Servicio Archivo] as file_svc_del
        COMPONENT [üßπ Servicio Limpieza] as cleanup_svc
    }
    
    ' Storage Layer Multi-Cloud
    package "‚òÅÔ∏è Storage" as scrum15_storage {
        COMPONENT [üè≠ F√°brica Almacenamiento] as storage_fact_del
        COMPONENT [üÖæÔ∏è Repositorio OCI] as oci_repo_del
        COMPONENT [üü† Repositorio AWS] as aws_repo_del
        COMPONENT [üîµ Repositorio Azure] as azure_repo_del
        COMPONENT [üü¢ Repositorio GCP] as gcp_repo_del
    }
    
    ' Data Layer
    package "üóÑÔ∏è Data" as scrum15_data {
        COMPONENT [üìÑ Repositorio Archivo] as file_repo_del
        COMPONENT [üìù Logger B√°sico] as log_repo_del
        DATABASE "üêò PostgreSQL" as db_delete
    }
    
    ' Flujo de eliminaci√≥n
    delete_btn --> confirm_modal
    confirm_modal --> delete_ctrl
    delete_ctrl --> perm_val_del
    delete_ctrl --> file_svc_del
    file_svc_del --> cleanup_svc
    
    cleanup_svc --> storage_fact_del
    storage_fact_del --> oci_repo_del
    storage_fact_del --> aws_repo_del
    storage_fact_del --> azure_repo_del
    storage_fact_del --> gcp_repo_del
    
    cleanup_svc --> file_repo_del
    cleanup_svc --> log_repo_del
    file_repo_del --> db_delete
    log_repo_del --> db_delete
    
    delete_ctrl --> refresh_handler
}

note right of scrum15 : **Criterio de Aceptaci√≥n:**\nConfirmaci√≥n antes de eliminar,\nactualizaci√≥n autom√°tica de vista

!endsub

' ===============================
' SCRUM-17: CREAR CARPETAS
' ===============================
!startsub SCRUM17

package "üìÅ SCRUM-17: Crear Carpetas" as scrum17 {
    
    ' Frontend Components
    package "üñ•Ô∏è Frontend" as scrum17_frontend {
        COMPONENT [üìÅ Bot√≥n Crear Carpeta] as create_btn
        COMPONENT [üìù Modal Nombre Carpeta] as name_modal
        COMPONENT [‚úÖ Validador Carpeta] as folder_validator_fe
    }
    
    ' Backend Components
    package "üîß Backend" as scrum17_backend {
        COMPONENT [üìÅ Controlador Carpeta] as folder_ctrl_create
        COMPONENT [‚úÖ Validador Nombre] as name_validator
        COMPONENT [üìÅ Servicio Carpeta] as folder_svc
        COMPONENT [üîç Verificador Duplicados] as duplicate_checker
    }
    
    ' Storage Layer Multi-Cloud
    package "‚òÅÔ∏è Storage" as scrum17_storage {
        COMPONENT [üè≠ F√°brica Almacenamiento] as storage_fact_folder
        COMPONENT [üÖæÔ∏è Repositorio OCI] as oci_repo_folder
        COMPONENT [üü† Repositorio AWS] as aws_repo_folder
        COMPONENT [üîµ Repositorio Azure] as azure_repo_folder
        COMPONENT [üü¢ Repositorio GCP] as gcp_repo_folder
    }
    
    ' Data Layer
    package "üóÑÔ∏è Data" as scrum17_data {
        COMPONENT [üìÅ Repositorio Carpeta] as folder_repo_create
        DATABASE "üêò PostgreSQL" as db_folder
    }
    
    ' Flujo de creaci√≥n de carpeta
    create_btn --> name_modal
    name_modal --> folder_validator_fe
    folder_validator_fe --> folder_ctrl_create
    folder_ctrl_create --> name_validator
    name_validator --> duplicate_checker
    duplicate_checker --> folder_svc
    
    folder_svc --> storage_fact_folder
    storage_fact_folder --> oci_repo_folder
    storage_fact_folder --> aws_repo_folder
    storage_fact_folder --> azure_repo_folder
    storage_fact_folder --> gcp_repo_folder
    
    folder_svc --> folder_repo_create
    folder_repo_create --> db_folder
}

note right of scrum17 : **Criterio de Aceptaci√≥n:**\nCrear carpetas con nombres v√°lidos,\nvalidaci√≥n de duplicados

!endsub

' ===============================
' SCRUM-18: ORDENAR ARCHIVOS
' ===============================
!startsub SCRUM18

package "üî§ SCRUM-18: Ordenar Archivos" as scrum18 {
    
    ' Frontend Components
    package "üñ•Ô∏è Frontend" as scrum18_frontend {
        COMPONENT [üî§ Controles Ordenar] as sort_controls
        COMPONENT [üìä Encabezado Tabla] as table_header
        COMPONENT [üóÇÔ∏è Cambiador Vista] as view_switcher
        COMPONENT [üîç Panel Filtro] as filter_panel
        COMPONENT [üíæ Persistencia Orden] as sort_persistence
    }
    
    ' Backend Components
    package "üîß Backend" as scrum18_backend {
        COMPONENT [üî§ Controlador Orden] as sort_ctrl
        COMPONENT [üîç Constructor Consulta] as query_builder
        COMPONENT [üìä Servicio Ordenar] as sort_svc
        COMPONENT [üìÑ Servicio Archivo] as file_svc_sort
    }
    
    ' Data Layer
    package "üóÑÔ∏è Data" as scrum18_data {
        COMPONENT [üìÑ Repositorio Archivo] as file_repo_sort
        COMPONENT [üîç Repositorio B√∫squeda] as search_repo
        DATABASE "üêò PostgreSQL" as db_sort
    }
    
    ' Flujo de ordenamiento
    sort_controls --> table_header
    table_header --> sort_ctrl
    view_switcher --> sort_ctrl
    filter_panel --> sort_ctrl
    
    sort_ctrl --> query_builder
    query_builder --> sort_svc
    sort_svc --> file_svc_sort
    
    file_svc_sort --> file_repo_sort
    file_svc_sort --> search_repo
    file_repo_sort --> db_sort
    search_repo --> db_sort
    
    sort_ctrl --> sort_persistence
}

note right of scrum18 : **Criterio de Aceptaci√≥n:**\nOrdenar por nombre, fecha, tama√±o, tipo.\nFiltros persistentes durante sesi√≥n

!endsub

' ===============================
' SCRUM-28: B√öSQUEDA DE ARCHIVOS
' ===============================
!startsub SCRUM28

package "üîç SCRUM-28: B√∫squeda de Archivos" as scrum28 {
    
    ' Frontend Components
    package "üñ•Ô∏è Frontend" as scrum28_frontend {
        COMPONENT [üîç Componente B√∫squeda] as search_comp
        COMPONENT [üìù Campo B√∫squeda] as search_input
        COMPONENT [üéõÔ∏è Controles Filtro] as filter_controls
        COMPONENT [üìã Lista Resultados] as results_list
        COMPONENT [‚ö° B√∫squeda Tiempo Real] as realtime_search
    }
    
    ' Backend Components
    package "üîß Backend" as scrum28_backend {
        COMPONENT [üîç Controlador B√∫squeda] as search_ctrl
        COMPONENT [üîç Servicio B√∫squeda] as search_svc
        COMPONENT [üìä Servicio Indexaci√≥n] as indexing_svc
        COMPONENT [üéØ Optimizador Consulta] as query_optimizer
    }
    
    ' Data Layer
    package "üóÑÔ∏è Data" as scrum28_data {
        COMPONENT [üîç Repositorio B√∫squeda] as search_repo_main
        COMPONENT [üìä Repositorio √çndice] as index_repo
        DATABASE "üêò PostgreSQL" as db_search
    }
    
    ' Flujo de b√∫squeda
    search_comp --> search_input
    search_input --> realtime_search
    search_comp --> filter_controls
    filter_controls --> search_ctrl
    realtime_search --> search_ctrl
    
    search_ctrl --> search_svc
    search_svc --> query_optimizer
    query_optimizer --> indexing_svc
    
    search_svc --> search_repo_main
    indexing_svc --> index_repo
    search_repo_main --> db_search
    index_repo --> db_search
    
    search_svc --> results_list
}

note right of scrum28 : **Criterio de Aceptaci√≥n:**\nB√∫squeda por nombre y tipo de archivo,\nresultados en tiempo real

!endsub

' ===============================
' SCRUM-29: IMPRIMIR ARCHIVOS
' ===============================
!startsub SCRUM29

package "üñ®Ô∏è SCRUM-29: Imprimir Archivos" as scrum29 {
    
    ' Frontend Components
    package "üñ•Ô∏è Frontend" as scrum29_frontend {
        COMPONENT [üñ®Ô∏è Bot√≥n Imprimir] as print_btn
        COMPONENT [‚öôÔ∏è Di√°logo Imprimir] as print_dialog
        COMPONENT [üìÑ Vista Previa Impresi√≥n] as print_preview
        COMPONENT [üéõÔ∏è Configuraci√≥n Impresi√≥n] as print_settings
    }
    
    ' Backend Components
    package "üîß Backend" as scrum29_backend {
        COMPONENT [üñ®Ô∏è Controlador Impresi√≥n] as print_ctrl
        COMPONENT [üìÑ Servicio Impresi√≥n] as print_svc
        COMPONENT [üîÑ Convertidor Formato] as format_converter
        COMPONENT [üìä Generador Imprimible] as printable_gen
    }
    
    ' Browser API
    package "üåê Browser" as scrum29_browser {
        COMPONENT [üñ®Ô∏è API Impresi√≥n Navegador] as browser_print
        COMPONENT [üìÑ Renderizador Documento] as doc_renderer
    }
    
    ' Flujo de impresi√≥n
    print_btn --> print_dialog
    print_dialog --> print_settings
    print_settings --> print_preview
    print_preview --> print_ctrl
    
    print_ctrl --> print_svc
    print_svc --> format_converter
    format_converter --> printable_gen
    
    printable_gen --> doc_renderer
    doc_renderer --> browser_print
}

note right of scrum29 : **Criterio de Aceptaci√≥n:**\nImprimir desde vista previa,\nsoporte para PDF e im√°genes

!endsub

' ===============================
' RELACIONES ENTRE HISTORIAS
' ===============================
package "üîó DEPENDENCIAS ENTRE HISTORIAS" as dependencies {
    
    scrum5 .down.> scrum10 : "Requiere autenticaci√≥n"
    scrum10 .down.> scrum11 : "Panel base para acciones"
    scrum11 .down.> scrum12 : "Bot√≥n subir archivo"
    scrum12 .down.> scrum14 : "Archivos para previsualizar"
    scrum12 .down.> scrum15 : "Archivos para eliminar"
    scrum17 .down.> scrum18 : "Carpetas para ordenar"
    scrum18 .down.> scrum28 : "Estructura para b√∫squeda"
    scrum14 .down.> scrum29 : "Vista previa para imprimir"
}

' ===============================
' LEYENDA ARQUITECT√ìNICA
' ===============================
legend bottom left
|= S√≠mbolo |= Significado |= Patr√≥n Aplicado |
|üîê| Verificaci√≥n Credenciales | Comparaci√≥n Simple |
|üì§üì•| Gesti√≥n Archivos | Patr√≥n Repository |
|üìä| Panel Control/M√©tricas | Patr√≥n Facade |
|üè≠| F√°brica Multi-Cloud | Patr√≥n Factory |
|üîç| B√∫squeda | Patr√≥n Observer |
|üë§| Validaci√≥n Propietario | Patr√≥n Decorator |
|üìù| Logging B√°sico | Logger Simple |
|üÖæÔ∏è| Oracle Cloud (OCI) | Repository Pattern |
|üü†| Amazon Web Services | Repository Pattern |
|üîµ| Microsoft Azure | Repository Pattern |
|üü¢| Google Cloud Platform | Repository Pattern |

**üèóÔ∏è Principios SOLID aplicados en Sprint 1:**
‚Ä¢ **S**RP: Cada componente tiene una responsabilidad espec√≠fica
‚Ä¢ **O**CP: Extensible para nuevos tipos de archivo/almacenamiento
‚Ä¢ **L**SP: Las interfaces permiten intercambiar implementaciones
‚Ä¢ **I**SP: Interfaces espec√≠ficas por funcionalidad
‚Ä¢ **D**IP: Dependencias hacia abstracciones, no concreciones

**üìã Nota Sprint 1:** 
‚Ä¢ Sistema b√°sico sin roles/permisos avanzados
‚Ä¢ Validaciones de propietario √∫nicamente
‚Ä¢ Autenticaci√≥n simple: verificaci√≥n email/password vs BD
‚Ä¢ Sin JWT, tokens, ni middleware de autenticaci√≥n
‚Ä¢ Arquitectura multi-cloud: AWS, Azure, GCP, OCI
endlegend

@enduml